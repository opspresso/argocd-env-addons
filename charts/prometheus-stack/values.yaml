kube-prometheus-stack:
  fullnameOverride: prometheus

  # prometheusOperator:
  #   tolerations:
  #     - key: group
  #       operator: Equal
  #       value: monitoring
  #       effect: NoSchedule
  #   nodeSelector:
  #     group: monitoring

  prometheus:
    enabled: true

    prometheusSpec:
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: gp3 # aws-ebs-sc
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 80Gi

      resources:
        requests:
          cpu: "500m"
          memory: 2Gi
        limits:
          cpu: "2"
          memory: 4Gi

      # tolerations:
      #   - key: group
      #     operator: Equal
      #     value: monitoring
      #     effect: NoSchedule
      # nodeSelector:
      #   group: monitoring

  alertmanager:
    enabled: false

    config:
      route:
        receiver: "slack"
        routes:
          - match:
              alertname: Watchdog
            receiver: "slack"

      receivers:
        - name: "null"
        - name: "slack"
          slack_configs:
            - channel: "#sandbox"
              api_url_file: /etc/alertmanager/secrets/prometheus-alertmanager-secret/slack-hooks
              color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
              icon_url: https://avatars3.githubusercontent.com/u/3380462
              send_resolved: true

              title: "{{ range .Alerts }}{{ .Annotations.summary }}\n{{ end }}"
              text: "{{ range .Alerts }}{{ .Annotations.description }}\n{{ end }}"

              # title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Monitoring Event Notification'
              # text: |
              #   {{ range .Alerts }}
              #   *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
              #   *Cluster:* `{{cluster}}`
              #   *Description:* {{ .Annotations.description }}
              #   *Details:*
              #     {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* {{ .Value }}
              #     {{ end }}
              #   {{ end }}

    alertmanagerSpec:
      secrets:
        - prometheus-alertmanager-secret

      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: gp3 # aws-ebs-sc
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 35Gi

      resources:
        requests:
          cpu: "200m"
          memory: 512Gi
        limits:
          cpu: "1"
          memory: 2Gi

      # tolerations:
      #   - key: group
      #     operator: Equal
      #     value: monitoring
      #     effect: NoSchedule
      # nodeSelector:
      #   group: monitoring
      #   # topology.kubernetes.io/zone: {{aws_region}}c

  kube-state-metrics:
    fullnameOverride: kube-state-metrics

    # customLabels:
    #   owner: "{{cluster}}"
    #   department: "addons"

    # https://github.com/kubernetes/kube-state-metrics/blob/master/docs/cli-arguments.md
    extraArgs:
      - --metric-labels-allowlist=nodes=[*],namespaces=[*],deployments=[*],pods=[*],services=[*],statefulsets=[*]

    # tolerations:
    #   - key: group
    #     operator: Equal
    #     value: monitoring
    #     effect: NoSchedule
    # nodeSelector:
    #   group: monitoring

  prometheus-node-exporter:
    fullnameOverride: prometheus-node-exporter

    # podLabels:
    #   owner: "{{cluster}}"
    #   department: "addons"

    # image:
    #   repository: {{prometheus.node-exporter.image.registry}}/{{prometheus.node-exporter.image.repository}}

  kubelet:
    serviceMonitor:
      relabelings:
        - action: replace
          sourceLabels: [__metrics_path__]
          targetLabel: metrics_path
      cAdvisorRelabelings:
        - action: replace
          sourceLabels: [__metrics_path__]
          targetLabel: metrics_path
      probesRelabelings:
        - action: replace
          sourceLabels: [__metrics_path__]
          targetLabel: metrics_path

  grafana:
    enabled: false
