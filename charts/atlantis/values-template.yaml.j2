atlantis:
  fullnameOverride: atlantis

{% if atlantis is defined %}
  atlantisUrl: "https://atlantis.{{hostname.public}}"

  orgAllowlist: "{{atlantis.allowlist}}"

  podTemplate:
    annotations:
      link.argocd.argoproj.io/external-link: "https://atlantis.{{hostname.public}}"

  ingress:
    enabled: true
    host: "atlantis-public.{{hostname.public}}"
    paths:
      - path: /events
        service: atlantis
        port: 80
    annotations:
      kubernetes.io/ingress.class: "alb"
      external-dns.alpha.kubernetes.io/hostname: "atlantis-public.{{hostname.public}}"
      alb.ingress.kubernetes.io/scheme: "internet-facing"
      alb.ingress.kubernetes.io/target-type: "ip"
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/certificate-arn: "{{atlantis.acm_arn}}"
      alb.ingress.kubernetes.io/actions.ssl-redirect: |
        {"Type": "redirect", "RedirectConfig": {"Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}
      alb.ingress.kubernetes.io/actions.post-only: |
        {"Type": "fixed-response", "FixedResponseConfig": {"ContentType": "text/plain", "StatusCode": "405", "MessageBody": "Method Not Allowed"}}

  extraManifests:
    - apiVersion: v1
      kind: ConfigMap
      metadata:
        name: atlantis-configmap
      data:
        ATLANTIS_GH_ORG: "{{atlantis.github.org}}"
        ATLANTIS_GH_USER: "{{atlantis.github.user}}"
        ATLANTIS_WRITE_GIT_CREDS: "true"
        ATLANTIS_ALLOW_FORK_PRS: "true"
{% if atlantis.infracost.enabled %}
        INFRACOST_PRICING_API_ENDPOINT: "https://cloud-pricing-api.{{hostname.public}}"
{% endif %}

    - apiVersion: external-secrets.io/v1beta1
      kind: ExternalSecret
      metadata:
        name: atlantis-secret
      spec:
        refreshInterval: 1h
        secretStoreRef:
          kind: ClusterSecretStore
          name: parameter-store
        target:
          name: atlantis-secret
        data:
          - secretKey: ATLANTIS_GH_TOKEN
            remoteRef:
              key: /k8s/common/github/{{atlantis.github.user}}/token
          - secretKey: ATLANTIS_GH_WEBHOOK_SECRET
            remoteRef:
              key: /k8s/common/github/{{atlantis.github.user}}/secret
{% if atlantis.infracost.enabled %}
          - secretKey: INFRACOST_API_KEY
            remoteRef:
              key: /k8s/common/infracost/self-hosted-api-key
          - secretKey: SELF_HOSTED_INFRACOST_API_KEY
              remoteRef:
                key: /k8s/common/infracost/self-hosted-api-key
{% endif %}

    - apiVersion: networking.istio.io/v1beta1
      kind: Gateway
      metadata:
        name: atlantis
      spec:
        selector:
          istio: ingressgateway
        servers:
          - hosts:
              - "atlantis.{{hostname.public}}"
            port:
              number: 80
              name: http
              protocol: HTTP

    - apiVersion: networking.istio.io/v1beta1
      kind: VirtualService
      metadata:
        name: atlantis
      spec:
        hosts:
          - "atlantis.{{hostname.public}}"
        gateways:
          - atlantis
          - mesh
        http:
          - route:
              - destination:
                  host: atlantis
                  port:
                    number: 80

    - apiVersion: security.istio.io/v1beta1
      kind: AuthorizationPolicy
      metadata:
        name: atlantis
        namespace: istio-system
      spec:
        selector:
          matchLabels:
            istio: ingressgateway
        action: CUSTOM
        provider:
          name: oauth2-proxy
        rules:
        - to:
          - operation:
              hosts:
              - "atlantis.{{hostname.public}}"
{% endif %}
