aws-ebs-csi-driver:
  fullnameOverride: aws-ebs-csi-driver

  # image:
  #   repository: "{{aws_ebs_csi_driver.image.repository}}"

  # sidecars:
  #   nodeDriverRegistrar:
  #     image:
  #       repository: "{{aws_ebs_csi_driver.nodeDriverRegistrar.image.repository}}"
  #   livenessProbe:
  #     image:
  #       repository: "{{aws_ebs_csi_driver.livenessProbe.image.repository}}"

  controller:
    # k8sTagClusterId: "{{cluster}}"

    # podLabels:
    #   owner: "{{cluster}}"
    #   department: "addons"

    # tolerations:
    #   - key: group
    #     operator: Equal
    #     value: ingress
    #     effect: NoSchedule
    # nodeSelector:
    #   group: ingress

    extraVolumeTags:
      # KubernetesCluster: "{{cluster}}"
      # Environment: alpha
      Role: eks
      Service: ks

    # serviceAccount:
    #   annotations:
    #     eks.amazonaws.com/role-arn: "arn:aws:iam::{{aws_account_id}}:role/irsa--{{group}}--aws-ebs-csi-driver"

  node:
    tolerateAllTaints: true

    # podLabels:
    #   owner: "{{cluster}}"
    #   department: "addons"

    serviceAccount:
      annotations:
        eks.amazonaws.com/role-arn: "arn:aws:iam::{{aws_account_id}}:role/irsa--{{group}}--aws-ebs-csi-driver"

  storageClasses:
    - name: gp3
      annotations:
        storageclass.kubernetes.io/is-default-class: "true"
      volumeBindingMode: WaitForFirstConsumer
      reclaimPolicy: Retain
      parameters:
        type: "gp3"
        allowAutoIOPSPerGBIncrease: "true" # must quote
      allowVolumeExpansion: true

    - name: gp2
      volumeBindingMode: WaitForFirstConsumer
      reclaimPolicy: Delete
      parameters:
        fsType: ext4
        type: "gp2"
      provisioner: kubernetes.io/aws-ebs

  # useOldCSIDriver: {{aws_ebs_csi_driver.useOldCSIDriver}}
