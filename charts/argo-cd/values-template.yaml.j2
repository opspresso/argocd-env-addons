argo-cd:
  fullnameOverride: argocd

{% if argocd is defined %}
  controller:
    metrics:
      serviceMonitor:
        enabled: {{prometheus.serviceMonitor.enabled}}
        selector:
          release: prometheus-{{cluster}}

  server:
    ingress:
      enabled: true
      host: "{{argocd.hostname}}"
      paths:
        - path: /
          service: argocd-server
          port: 80
      annotations:
        kubernetes.io/ingress.class: "alb"
        external-dns.alpha.kubernetes.io/hostname: "{{argocd.hostname}}"
        alb.ingress.kubernetes.io/scheme: "internet-facing"
        alb.ingress.kubernetes.io/target-type: "ip"
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
        alb.ingress.kubernetes.io/certificate-arn: "{{argocd.acm_arn}}"
        alb.ingress.kubernetes.io/actions.ssl-redirect: |
          {"Type": "redirect", "RedirectConfig": {"Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}

    metrics:
      serviceMonitor:
        enabled: {{prometheus.serviceMonitor.enabled}}
        selector:
          release: prometheus-{{cluster}}

  repoServer:
    metrics:
      serviceMonitor:
        enabled: {{prometheus.serviceMonitor.enabled}}
        selector:
          release: prometheus-{{cluster}}

  dex:
    metrics:
      serviceMonitor:
        enabled: {{prometheus.serviceMonitor.enabled}}
        selector:
          release: prometheus-{{cluster}}

  notifications:
    argocdUrl: https://{{argocd.hostname}}

  configs:
    rbac:
      policy.default: "role:readonly"
      policy.csv: |
        g, {{argocd.github.org}}:{{argocd.github.team}}, role:admin

    cm:
      url: https://{{argocd.hostname}}

      help.chatUrl: "{{argocd.chatUrl}}"
      help.chatText: "Chat now!"

      dex.config: |
        connectors:
        - type: github
          id: github
          name: github
          config:
            clientID: $dex.github.clientId
            clientSecret: $dex.github.clientSecret
            teamNameField: slug
            orgs:
              - name: {{argocd.github.org}}
        staticClients:
        - id: argo-workflows-sso
          name: Argo Workflow
          redirectURIs:
            - https://workflows.{{hostname.public}}/oauth2/callback
          secretEnv: ARGO_WORKFLOWS_SSO_CLIENT_SECRET
        - id: oauth2-proxy-sso
          name: OAuth2 Proxy
          redirectURIs:
            - https://auth.{{hostname.public}}/oauth2/callback
          secretEnv: OAUTH2_PROXY_SSO_CLIENT_SECRET

raw:
  resources:
    # - apiVersion: networking.istio.io/v1beta1
    #   kind: Gateway
    #   metadata:
    #     name: argocd-server
    #   spec:
    #     selector:
    #       istio: ingressgateway
    #     servers:
    #       - hosts:
    #           - "{{argocd.hostname}}"
    #         port:
    #           number: 80
    #           name: http
    #           protocol: HTTP

    # - apiVersion: networking.istio.io/v1beta1
    #   kind: VirtualService
    #   metadata:
    #     name: argocd-server
    #   spec:
    #     hosts:
    #       - "{{argocd.hostname}}"
    #     gateways:
    #       - argocd-server
    #       - mesh
    #     http:
    #       - route:
    #           - destination:
    #               host: argocd-server
    #               port:
    #                 number: 80

    - apiVersion: external-secrets.io/v1beta1
      kind: ExternalSecret
      metadata:
        name: argocd-secret
      spec:
        refreshInterval: 1h
        secretStoreRef:
          kind: ClusterSecretStore
          name: parameter-store
        target:
          name: argocd-secret
        data:
          - secretKey: admin.password
            remoteRef:
              key: /k8s/common/argocd-password
          - secretKey: admin.passwordMtime
            remoteRef:
              key: /k8s/common/argocd-mtime
          - secretKey: dex.github.clientId
            remoteRef:
              key: /k8s/{{argocd.github.org}}/argocd-github-id
          - secretKey: dex.github.clientSecret
            remoteRef:
              key: /k8s/{{argocd.github.org}}/argocd-github-secret
          - secretKey: webhook.github.secret
            remoteRef:
              key: /k8s/common/argocd-webhook
          - secretKey: server.secretkey
            remoteRef:
              key: /k8s/common/argocd-server-secret
{% if argocd.google.enabled %}
          - secretKey: dex.google.clientId
            remoteRef:
              key: /common/google/client_id
          - secretKey: dex.google.clientSecret
            remoteRef:
              key: /common/google/client_secret
{% endif %}
          - secretKey: argo-workflows-client-secret
            remoteRef:
              key: /k8s/common/argo-workflows-client-secret
          - secretKey: oauth2-proxy-client-secret
            remoteRef:
              key: /k8s/common/oauth2-proxy-client-secret
{% endif %}
