istiod:
  global:
    hub: gcr.io/istio-release

    # proxy:
    #   lifecycle:
    #     # preStop:
    #     #   exec:
    #     #     command:
    #     #       - "/bin/sh"
    #     #       - "-c"
    #     #       - "while [ $(netstat -plunt | grep tcp | grep -v envoy | wc -l | xargs) -ne 0 ]; do sleep 1; done"
    #     postStart:
    #       exec:
    #         command:
    #           - pilot-agent
    #           - wait

    # # tracer:
    # #   zipkin:
    # #     address: jaeger-collector.addon-tracing.svc.cluster.local:9411

  pilot:
    autoscaleEnabled: false

    serviceAnnotations:
      service.kubernetes.io/topology-aware-hints: auto

    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: istiod
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: istiod

    resources:
      requests:
        cpu: 100m
        memory: 128Mi

  meshConfig:
    defaultConfig:
      tracing:
        sampling: 10
      gatewayTopology:
        numTrustedProxies: 1
      holdApplicationUntilProxyStarts: true
      terminationDrainDuration: 30s
    enableTracing: true
    rootNamespace: istio-system
    # localityLbSetting:
    #   enabled: true

    extensionProviders:
      - name: oauth2-proxy
        envoyExtAuthzHttp:
          service: "oauth2-proxy.addon-oauth2-proxy.svc.cluster.local"
          port: "80"
          headersToDownstreamOnDeny:
            - content-type
            - set-cookie
          headersToUpstreamOnAllow:
            - authorization
            - cookie
            - path
            - x-auth-request-access-token
            - x-auth-request-user
            - x-auth-request-email
            - x-forwarded-access-token
          includeHeadersInCheck:
            - cookie
            - x-forwarded-access-token
            # - x-forwarded-user
            # - x-forwarded-email
          includeAdditionalHeadersInCheck:
            authorization: "%REQ(x-auth-request-access-token)%"

gateway:
  name: istio-ingressgateway

  service:
    type: ClusterIP

    # externalTrafficPolicy: Local

    annotations:
      service.kubernetes.io/topology-aware-hints: auto

  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app: istio-ingressgateway
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app: istio-ingressgateway

raw:
  resources:
    - apiVersion: v1
      kind: Service
      metadata:
        labels:
          app: istio-ingressgateway
          istio: ingressgateway
        name: istio-ingressgateway-metrics
      spec:
        ports:
          - name: http-envoy-prom
            port: 25090
            protocol: TCP
            targetPort: 15090
        selector:
          app: istio-ingressgateway
          istio: ingressgateway
        type: ClusterIP

    - apiVersion: networking.istio.io/v1alpha3
      kind: EnvoyFilter
      metadata:
        name: gateway-response-remove-headers
      spec:
        workloadSelector:
          labels:
            istio: ingressgateway
        configPatches:
          - applyTo: NETWORK_FILTER
            match:
              context: GATEWAY
              listener:
                filterChain:
                  filter:
                    name: "envoy.filters.network.http_connection_manager"
            patch:
              operation: MERGE
              value:
                typed_config:
                  "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
                  server_header_transformation: PASS_THROUGH
          - applyTo: ROUTE_CONFIGURATION
            match:
              context: GATEWAY
            patch:
              operation: MERGE
              value:
                response_headers_to_remove:
                  - "x-envoy-decorator-operation"
                  - "x-envoy-upstream-service-time"
                  - "server"

    # - apiVersion: monitoring.coreos.com/v1
    #   kind: ServiceMonitor
    #   metadata:
    #     labels:
    #       app: istio-ingressgateway
    #       # release: prometheus-{{cluster}}
    #     name: istio-ingressgateway-metrics
    #   spec:
    #     endpoints:
    #       - interval: 15s
    #         path: /stats/prometheus
    #         port: http-envoy-prom
    #     jobLabel: istio-ingressgateway
    #     namespaceSelector:
    #       matchNames:
    #         - istio-system
    #     selector:
    #       matchLabels:
    #         app: istio-ingressgateway
    #         istio: ingressgateway

    # - apiVersion: monitoring.coreos.com/v1
    #   kind: ServiceMonitor
    #   metadata:
    #     labels:
    #       app: istio-components
    #       # release: prometheus-{{cluster}}
    #     name: istio-components-metrics
    #   spec:
    #     endpoints:
    #       - interval: 30s
    #         metricRelabelings:
    #           - sourceLabels:
    #               - cluster
    #             targetLabel: istio_cluster
    #           - action: labeldrop
    #             regex: cluster
    #         port: http-monitoring
    #     jobLabel: istio
    #     namespaceSelector:
    #       matchNames:
    #         - istio-system
    #     selector:
    #       matchExpressions:
    #         - key: istio
    #           operator: In
    #           values:
    #             - mixer
    #             - pilot
    #             - galley
    #             - citadel
    #             - sidecar-injector
    #             - istiod

    # - apiVersion: monitoring.coreos.com/v1
    #   kind: ServiceMonitor
    #   metadata:
    #     labels:
    #       app: istio-servicemesh
    #       # release: prometheus-{{cluster}}
    #     name: istio-servicemesh-metrics
    #   spec:
    #     endpoints:
    #       - interval: 15s
    #         path: /stats/prometheus
    #         relabelings:
    #           - sourceLabels: [__meta_kubernetes_pod_container_port_name]
    #             action: keep
    #             regex: ".*-envoy-prom"
    #           - action: labeldrop
    #             regex: "__meta_kubernetes_pod_label_(.+)"
    #           - sourceLabels: [__meta_kubernetes_namespace]
    #             action: replace
    #             targetLabel: namespace
    #           - sourceLabels: [__meta_kubernetes_pod_name]
    #             action: replace
    #             targetLabel: pod_name
    #     jobLabel: istio-servicemesh
    #     namespaceSelector:
    #       any: true
    #     selector:
    #       matchExpressions:
    #         - key: istio
    #           operator: DoesNotExist
