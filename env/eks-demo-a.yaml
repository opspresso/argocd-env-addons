cluster: eks-demo-a

active: "true"
country: kr
env: demo
group: eks-demo-a
role: service

aws_account_id: "396608815058"
aws_region: ap-northeast-2

hostname:
  internal: in.demo.opspresso.com
  public: demo.opspresso.com

argo_workflows:
  github:
    org: opspresso # github org
    team: sre

# aws_ebs_csi_driver:
#   image:
#     repository: public.ecr.aws/ebs-csi-driver/aws-ebs-csi-driver
#   nodeDriverRegistrar:
#     image:
#       repository: k8s.gcr.io/sig-storage/csi-node-driver-registrar
#   livenessProbe:
#     image:
#       repository: k8s.gcr.io/sig-storage/livenessprobe
#   useOldCSIDriver: false

# aws_efs_csi_driver:
#   id: "fs-0d24289c6d6ad35d7"

aws_node_termination_handler:
  replicas: 1
  slack:
    channel: "sandbox"
    emoji: ":construction:"

# chaoskube:
#   interval: 20m
#   timezone: "Asia/Seoul"

cluster_autoscaler:
  scan_interval: 20s
  scale_down_delay_after_delete: 1m
  scale_down_utilization_threshold: 0.6

# cluster_overprovisioner:
#   replicas: 0
#   cpu: "1"
#   memory: 1Gi

cluster_role:
  readonly:
    enabled: true

dashboard:
  requests:
    cpu: "200m"
    memory: 512Mi
  limits:
    cpu: "500m"
    memory: 1Gi

istio:
  global:
    hub: gcr.io/istio-release
  pilot:
    autoscale: false
    min: 2
    max: 2
  gateway:
    autoscale: false
    min: 2
    max: 5
  tracing:
    sampling: 10
  target_group:
    internal_http: arn:aws:elasticloadbalancing:ap-northeast-2:396608815058:targetgroup/demo-in-http-a/140c9abc47d4684e
    public_http: arn:aws:elasticloadbalancing:ap-northeast-2:396608815058:targetgroup/demo-http-a/ecaf6eeb5a715cc9

loki:
  hostname: loki.in.demo.opspresso.com

prometheus:
  serviceMonitor:
    enabled: false
