apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: cluster-info
spec:
  generators:
    - git:
        repoURL: https://github.com/opspresso/argocd-env-addons.git
        revision: HEAD
        files:
          - path: "env/eks-demo.yaml"
          # - path: "env/eks-demo-a.yaml"
          # - path: "env/eks-demo-b.yaml"

  template:
    metadata:
      name: "cluster-info-{{cluster}}"
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: noti-argocd-{{env}}-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: addons
      destination:
        name: "{{cluster}}"
        namespace: default
      source:
        repoURL: https://charts.helm.sh/incubator
        targetRevision: "0.2.5"
        chart: raw
        helm:
          values: |-
            fullnameOverride: cluster-info

            resources:
              - apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: cluster-info
                  labels:
                    krmt.io/type: "cluster-info"
                data:
                  ACTIVE: "{{active}}"
                  AWS_ACCOUNT_ID: "{{aws_account_id}}"
                  AWS_REGION: "{{aws_region}}"
                  CLUSTER: "{{cluster}}"
                  COUNTRY: "{{country}}"
                  ENV: "{{env}}"
                  ROLE: "{{role}}"

              - apiVersion: external-secrets.io/v1beta1
                kind: ExternalSecret
                metadata:
                  name: cluster-info
                  labels:
                    krmt.io/type: "cluster-info"
                spec:
                  refreshInterval: 1h
                  secretStoreRef:
                    kind: ClusterSecretStore
                    name: parameter-store
                  target:
                    name: cluster-info
                  data:
                    - secretKey: cluster_oidc_url
                      remoteRef:
                        key: /k8s/common/{{cluster}}/cluster_oidc_url
                    - secretKey: cluster_role_name
                      remoteRef:
                        key: /k8s/common/{{cluster}}/cluster_role_name
                    - secretKey: cluster_version
                      remoteRef:
                        key: /k8s/common/{{cluster}}/cluster_version

              - apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: aws-auth
                  namespace: kube-system
                data:
                  mapRoles: |
                    - "groups":
                      - "system:bootstrappers"
                      - "system:nodes"
                      "rolearn": "arn:aws:iam::{{aws_account_id}}:role/{{cluster}}-worker"
                      "username": "system:node:{{EC2PrivateDNSName}}"
                    - "groups":
                      - "system:masters"
                      "rolearn": "arn:aws:iam::{{aws_account_id}}:role/atlantis-ecs_task_execution"
                      "username": "atlantis-ecs"
                    - "groups":
                      - "system:masters"
                      "rolearn": "arn:aws:iam::{{aws_account_id}}:role/irsa--eks-demo--atlantis"
                      "username": "atlantis-eks"
                    - "groups":
                      - "system:masters"
                      "rolearn": "arn:aws:iam::{{aws_account_id}}:role/k8s-master"
                      "username": "k8s-master"
                    - "groups": []
                      "rolearn": "arn:aws:iam::{{aws_account_id}}:role/k8s-readonly"
                      "username": "k8s-readonly"
                  mapUsers: |
                    - "groups":
                      - "system:masters"
                      "userarn": "arn:aws:iam::{{aws_account_id}}:user/ops"
                      "username": "iam-user-ops"
                    - "groups":
                      - "system:masters"
                      "userarn": "arn:aws:iam::{{aws_account_id}}:user/bruce"
                      "username": "iam-user-bruce"
                    - "groups":
                      - "system:masters"
                      "userarn": "arn:aws:iam::{{aws_account_id}}:user/jungyoul.yu"
                      "username": "iam-user-jungyoul.yu"

      syncPolicy:
        # automated:
        #   prune: true
        #   selfHeal: true
        syncOptions:
          - CreateNamespace=true
