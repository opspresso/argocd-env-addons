apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: dashboard-extra
spec:
  generators:
    - git:
        repoURL: https://github.com/opspresso/argocd-env-addons.git
        revision: HEAD
        files:
          - path: "env/eks-demo.yaml"
          # - path: "env/eks-demo-a.yaml"
          # - path: "env/eks-demo-b.yaml"

  template:
    metadata:
      name: "dashboard-extra-{{cluster}}"
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: noti-argocd-{{env}}-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: addons
      destination:
        name: "{{cluster}}"
        namespace: addon-dashboard
      source:
        repoURL: https://charts.helm.sh/incubator
        targetRevision: "0.2.5"
        chart: raw
        helm:
          values: |-
            fullnameOverride: dashboard-extra

            resources:
              - apiVersion: rbac.authorization.k8s.io/v1
                kind: ClusterRoleBinding
                metadata:
                  name: dashboard-rbac:view
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: ClusterRole
                  name: view
                subjects:
                  - kind: ServiceAccount
                    namespace: addon-dashboard
                    name: dashboard

              - apiVersion: rbac.authorization.k8s.io/v1
                kind: ClusterRoleBinding
                metadata:
                  name: dashboard-rbac:exec
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: ClusterRole
                  name: k8s-exec
                subjects:
                  - kind: ServiceAccount
                    namespace: addon-dashboard
                    name: dashboard

              # - apiVersion: networking.istio.io/v1beta1
              #   kind: Gateway
              #   metadata:
              #     name: dashboard
              #   spec:
              #     selector:
              #       istio: ingressgateway
              #     servers:
              #       - hosts:
              #           - "dashboard.{{hostname.public}}"
              #         port:
              #           number: 80
              #           name: http
              #           protocol: HTTP

              # - apiVersion: networking.istio.io/v1beta1
              #   kind: VirtualService
              #   metadata:
              #     name: dashboard
              #   spec:
              #     hosts:
              #       - "dashboard.{{hostname.public}}"
              #     gateways:
              #       - dashboard
              #       - mesh
              #     http:
              #       - route:
              #           - destination:
              #               host: dashboard
              #               port:
              #                 number: 80

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
