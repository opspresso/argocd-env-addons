apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: kubecost-extra
spec:
  generators:
    - git:
        repoURL: https://github.com/opspresso/argocd-env-addons.git
        revision: HEAD
        files:
          - path: "env/eks-demo.yaml"
          # - path: "env/eks-demo-a.yaml"
          # - path: "env/eks-demo-b.yaml"

  template:
    metadata:
      name: "kubecost-extra-{{cluster}}"
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: noti-argocd-{{cluster_env}}-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: addons
      destination:
        name: "{{cluster}}"
        namespace: addon-kubecost
      source:
        repoURL: https://charts.helm.sh/incubator
        targetRevision: "0.2.5"
        chart: raw
        helm:
          values: |-
            fullnameOverride: kubecost-extra

            resources:
              - apiVersion: monitoring.coreos.com/v1
                kind: PrometheusRule
                metadata:
                  labels:
                    release: prometheus-{{cluster}}
                  name: kubecost-rules
                spec:
                  groups:
                    - name: CPU
                      rules:
                        # - expr: sum(rate(container_cpu_usage_seconds_total{container_name!=""}[5m]))
                        #   record: cluster:cpu_usage:rate5m
                        # - expr: rate(container_cpu_usage_seconds_total{container_name!=""}[5m])
                        #   record: cluster:cpu_usage_nosum:rate5m
                        - expr: avg(irate(container_cpu_usage_seconds_total{container_name!="POD", container_name!=""}[5m])) by (container_name,pod_name,namespace)
                          record: kubecost_container_cpu_usage_irate
                        - expr: sum(container_memory_working_set_bytes{container_name!="POD",container_name!=""}) by (container_name,pod_name,namespace)
                          record: kubecost_container_memory_working_set_bytes
                        - expr: sum(container_memory_working_set_bytes{container_name!="POD",container_name!=""})
                          record: kubecost_cluster_memory_working_set_bytes
                    - name: Savings
                      rules:
                        - expr: sum(avg(kube_pod_owner{owner_kind!="DaemonSet"}) by (pod) * sum(container_cpu_allocation) by (pod))
                          record: kubecost_savings_cpu_allocation
                          labels:
                            daemonset: "false"
                        - expr: sum(avg(kube_pod_owner{owner_kind="DaemonSet"}) by (pod) * sum(container_cpu_allocation) by (pod)) / sum(kube_node_info)
                          record: kubecost_savings_cpu_allocation
                          labels:
                            daemonset: "true"
                        - expr: sum(avg(kube_pod_owner{owner_kind!="DaemonSet"}) by (pod) * sum(container_memory_allocation_bytes) by (pod))
                          record: kubecost_savings_memory_allocation_bytes
                          labels:
                            daemonset: "false"
                        - expr: sum(avg(kube_pod_owner{owner_kind="DaemonSet"}) by (pod) * sum(container_memory_allocation_bytes) by (pod)) / sum(kube_node_info)
                          record: kubecost_savings_memory_allocation_bytes
                          labels:
                            daemonset: "true"

              - apiVersion: networking.istio.io/v1beta1
                kind: Gateway
                metadata:
                  name: kubecost
                spec:
                  selector:
                    istio: ingressgateway
                  servers:
                    - hosts:
                        - "{{kubecost.hostname}}"
                      port:
                        number: 80
                        name: http
                        protocol: HTTP

              - apiVersion: networking.istio.io/v1beta1
                kind: VirtualService
                metadata:
                  name: kubecost
                spec:
                  hosts:
                    - "{{kubecost.hostname}}"
                  gateways:
                    - kubecost
                  http:
                    - route:
                        - destination:
                            host: kubecost-eks-demo-cost-analyzer
                            port:
                              number: 9090

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
