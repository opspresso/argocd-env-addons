apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: atlantis-extra
spec:
  generators:
    - git:
        repoURL: https://github.com/opspresso/argocd-env-addons.git
        revision: HEAD
        files:
          - path: "env/eks-demo.yaml"

  template:
    metadata:
      name: "atlantis-extra" # only management cluster
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: noti-argocd-{{env}}-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: addons
      destination:
        name: "{{cluster}}"
        namespace: addon-atlantis
      source:
        repoURL: https://charts.helm.sh/incubator
        targetRevision: "0.2.5"
        chart: raw
        helm:
          values: |-
            fullnameOverride: atlantis-extra

            resources:
              - apiVersion: external-secrets.io/v1beta1
                kind: ExternalSecret
                metadata:
                  name: atlantis-secret
                spec:
                  refreshInterval: 1h
                  secretStoreRef:
                    kind: ClusterSecretStore
                    name: parameter-store
                  target:
                    name: atlantis-secret
                  data:
                    - secretKey: github-secret
                      remoteRef:
                        key: /k8s/common/github/{{atlantis.github.user}}/token
                    - secretKey: infracost-api-key
                      remoteRef:
                        key: /k8s/common/infracost/api-key
                    - secretKey: self-hosted-infracost-api-key
                      remoteRef:
                        key: /k8s/common/infracost/self-hosted-api-key

              - apiVersion: networking.istio.io/v1beta1
                kind: Gateway
                metadata:
                  name: atlantis
                spec:
                  selector:
                    istio: ingressgateway
                  servers:
                    - hosts:
                        - "atlantis.{{hostname.public}}"
                      port:
                        number: 80
                        name: http
                        protocol: HTTP

              - apiVersion: networking.istio.io/v1beta1
                kind: VirtualService
                metadata:
                  name: atlantis
                spec:
                  hosts:
                    - "atlantis.{{hostname.public}}"
                  gateways:
                    - atlantis
                    - mesh
                  http:
                    - route:
                        - destination:
                            host: atlantis
                            port:
                              number: 80

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
